﻿@using static HaloDocMVC.Entity.Models.Constant;
@model HaloDocMVC.Entity.Models.RecordsModel
@{
    Layout = "_Layout";
}

@{
    var requestType = from ListType e in Enum.GetValues(typeof(ListType))
                      select new
                      {
                          ID = (int)e,
                          Name = e.ToString()
                      };
    var requestStaus = from Status e in Enum.GetValues(typeof(Status))
                       select new
                       {
                           ID = (int)e,
                           Name = e.ToString()
                       };
}

<div class="container-fluid px-4 mt-2 pb-3">
    <div class="d-flex justify-content-between my-2">
        <div class="d-flex align-self-center">
            <h4>Search Records</h4>
        </div>
        <a asp-controller="Home" asp-action="Index" class="btn btn-info text-white shadow-none">
            <i class="fa-solid fa-share-from-square"></i>
            <span class="d-none d-sm-inline">Export Data To Excel</span>
        </a>
    </div>

    <div class="card rounded shadow my-3">
        <!-- Filter Inputs -->
        <form id="FilterForm" class="mt-0" onsubmit="displayBusyIndicator()">
            <div class="row p-2">
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <select asp-items="@(new SelectList(requestStaus, "ID", "Name"))" asp-for="Status" class="form-select form-control shadow-none" id="RequestStatusDropDown">
                            <option>Select Request Status</option>
                        </select>
                        <label for="RequestStatusDropDown">Request Status</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <input asp-for="PatientName" type="text" class="form-control shadow-none" id="PatientName" placeholder="Enter Patient Name">
                        <label for="PatientName">Patient Name</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <select asp-items="@(new SelectList(requestType, "ID", "Name"))" asp-for="RequestType" class="form-select form-control shadow-none" id="RequestStatusTypeDropDown">
                            <option>Select Request Type</option>
                        </select>
                        <label for="RequestStatusTypeDropDown">Request Type</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <input asp-for="StartDate" type="date" class="form-control shadow-none" id="FromDateOfService" placeholder="Enter From Date Of Service">
                        <label for="FromDateOfService">From Date Of Service</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <input asp-for="EndDate" type="date" class="form-control shadow-none" id="ToDateOfService" placeholder="Enter To Date Of Service">
                        <label for="ToDateOfService">To Date Of Service</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <input asp-for="PhysicianName" type="text" class="form-control shadow-none" id="ProviderName" placeholder="Enter Provider Name">
                        <label for="ProviderName">Provider Name</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <input asp-for="Email" type="email" class="form-control shadow-none" id="Email" placeholder="Enter Email">
                        <label for="Email">Email</label>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6 col-12">
                    <div class="form-floating mb-3">
                        <input asp-for="PhoneNumber" type="tel" class="form-control shadow-none" id="PhoneNumber" placeholder="Enter Phone Number">
                        <label for="PhoneNumber">Phone Number</label>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-end mb-2">
                <button type="button" id="Clear" class="btn border-info text-info shadow-none mx-2">Clear</button>
                <button type="button" id="Submit" class="btn btn-info text-white shadow-none me-2">Search</button>
            </div>
        </form>
        <!-- End Filter Inputs -->
        <!--List of Outcomes-->
        <div class="table-responsive">
            <table class="table table-responsive mt-3 mb-0 dataTable">
                <thead class="theadbg">
                    <tr>
                        @{
                            var i1 = @Model.SortedColumn;
                            var J1 = @Model.IsAscending;
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "PatientName" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('PatientName')">
                                <small>Patient Name</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col">Requestor</th>
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "DateOfService" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('DateOfService')">
                                <small>Date Of Service</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col">Close Case Date</th>
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "Email" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('Email')">
                                <small>Email</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col">Phone Number</th>
                            <th scope="col">Address</th>
                            <th scope="col">Zip</th>
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "Status" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('Status')">
                                <small>Request Status</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col">Physician</th>
                            <th scope="col">Physician Notes</th>
                            <th scope="col">Cancelled By Provider Note</th>
                            <th scope="col">Admin Note</th>
                            <th scope="col">Patient Note</th>
                            <th scope="col">Delete Permanently</th>
                        }
                    </tr>
                </thead>
                <tbody class="table-group-divider" id="SearchRecords">
                    @foreach (var item in Model.SearchRecords)
                    {
                        <tr>
                            <td>@item.PatientName</td>
                            <td>@Enum.GetName(typeof(ListType), item.RequestTypeId)</td>
                            <td>@item.DateOfService.ToString("MMM d, yyyy")</td>
                            @if (item.CloseCaseDate != null)
                            {
                                <td>@item.CloseCaseDate</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            <td>@item.Email</td>
                            @if (item.PhoneNumber != "")
                            {
                                <td>@item.PhoneNumber</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            @if (item.Address != "")
                            {
                                <td>@item.Address</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            @if (item.Zip != "")
                            {
                                <td>@item.Zip</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            <td>@Enum.GetName(typeof(Status), item.Status)</td>
                            @if (item.PhysicianName != null)
                            {
                                <td>@item.PhysicianName</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            <td>@item.PhysicianNote</td>
                            @if (item.CancelByProviderNote != null)
                            {
                                <td>@item.CancelByProviderNote</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            @if (item.AdminNote != null)
                            {
                                <td>@item.AdminNote</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            @if (item.PatientNote != null)
                            {
                                <td>@item.PatientNote</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                            <td>
                                <form class="mt-0 DeleteForm" asp-controller="Records" asp-action="DeleteRequest" onsubmit="displayBusyIndicator()">
                                    <input type="hidden" name="RequestId" value="@item.RequestId" />
                                    <button type="button" class="btn btn-sm border-info text-info shadow-none mx-1 mb-2 Delete">
                                        Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- End List of Outcomes-->
        <!--Pagination-->
        <nav class="pagenav" aria-label="Page navigation example" id="Pagination">
            <div class="d-flex justify-content-between mx-2 mt-3">
                <div>
                    @if (Model.TotalPages == 0)
                    {
                        Model.CurrentPage = 0;
                    }
                    Page @Model.CurrentPage / @Model.TotalPages
                </div>
                <div>
                    <ul class="pagination pagination-container">
                        @{
                            int i;
                            <form id="paginationform" asp-action="Index" asp-controller="Records" novalidate="novalidate" class="d-flex mt-0" onsubmit="displayBusyIndicator()">
                                <input type="hidden" asp-for="PageSize" />
                                <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                                <input type="hidden" asp-for="RequestType" />
                                <input type="hidden" asp-for="Status" />
                                <input type="hidden" asp-for="PhysicianName" />
                                <input type="hidden" asp-for="Email" />
                                <input type="hidden" asp-for="PhoneNumber" />
                                <input type="hidden" asp-for="PatientName" />
                                <input type="hidden" asp-for="StartDate" />
                                <input type="hidden" asp-for="EndDate" />

                                @if (@Model.CurrentPage > 1)
                                {
                                <li class="page-item me-2">
                                    <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                </li>
                                }
                                else
                                {
                                <li class="me-2 page-item">
                                    <button class="disabled btn">&lt;</button>
                                </li>
                                }
                                @for (i = 1; i <= @Model.TotalPages; i++)
                                {
                                <li class="page-item me-2">
                                    <button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                </li>
                                }
                                @if (@Model.TotalPages > @Model.CurrentPage)
                                {
                                <li class="page-item me-2">
                                    <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                </li>
                                }
                                else
                                {
                                <li class="page-item">
                                    <button class="btn disabled">&gt;</button>
                                </li>
                                }
                            </form>
                        }
                    </ul>
                </div>
            </div>
        </nav>
        <!--End Pagination-->
    </div>
</div>
<form class="mt-0 sortingform" asp-action="Index" id="sortingform" asp-controller="Records" novalidate="novalidate" onsubmit="displayBusyIndicator()">
    <input type="hidden" asp-for="SortedColumn" id="sortedcol" />
    <input type="hidden" asp-for="IsAscending" id="isAsc" />
    <input type="hidden" asp-for="RequestType" />
    <input type="hidden" asp-for="Status" />
    <input type="hidden" asp-for="PhysicianName" />
    <input type="hidden" asp-for="Email" />
    <input type="hidden" asp-for="PhoneNumber" />
    <input type="hidden" asp-for="PatientName" />
    <input type="hidden" asp-for="StartDate" />
    <input type="hidden" asp-for="EndDate" />
</form>
<partial name="../Shared/_Loader.cshtml" />
<script>
    modeldata = @Html.Raw(Json.Serialize(Model))

    const clear = document.getElementById("Clear");
    const submit = document.getElementById("Submit");

    clear.addEventListener("click", function () {
        const inputs = document.querySelectorAll("#FilterForm input[type='text'], #FilterForm input[type='date'], #FilterForm input[type='email'], #FilterForm input[type='tel']",);
        inputs.forEach(input => {
            input.value = "";
        });

        const selects = document.querySelectorAll("#FilterForm select");
        selects.forEach(select => {
            select.value = "-1";
        });
        $('#Submit').click();
    });

    $(document).ready(function () {
        $("#Submit").click(function () {
            var formData = $("#FilterForm").serialize();

            $.ajax({
                type: "POST",
                url: '@Url.Action("Index", "Records")',
                data: formData,
                cache: false,
                success: function (response) {
                    console.log(response);
                    var bodyContent = $(response).find('tbody').html();
                    var pagination = $(response).find('.pagenav').html();
                    var sortingform = $(response).find('.sortingform').html();
                    $('#SearchRecords').html(bodyContent);
                    $('#Pagination').html(pagination);
                    $('#sortingform').html(sortingform);
                }
            });
        });
    });

    var deleteButton = document.querySelectorAll('.Delete');

    deleteButton.forEach(function (button) {
        button.addEventListener('click', function (event) {
            event.preventDefault();
            console.log(123)
            var form = button.closest('.DeleteForm');
            var requestIdInput = form.querySelector('input[name="RequestId"]');
            var requestId = requestIdInput.value;

            Swal.fire({
                title: "Do you want to delete this request ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: "No"
            }).then(function (result) {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        });
    });
    function setpagenumber(e) {
        console.log(e)
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#documentform").submit();
    }
    function SetColumValue(e) {
        var modeldata = @Html.Raw(Json.Serialize(Model));
        console.log(modeldata)
        if (modeldata.sortedColumn === e) {
            if (modeldata.isAscending == true) {
                document.getElementById('isAsc').value = false;
            }
            else {
                document.getElementById('isAsc').value = true;
            }
            console.log(document.getElementById('isAsc').value);
        }
        else {
            document.getElementById('sortedcol').value = e;
            document.getElementById('isAsc').value = true;
        }
        $("#sortingform").submit();
    }
</script>