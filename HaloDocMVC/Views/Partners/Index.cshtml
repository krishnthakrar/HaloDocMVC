@{
    Layout = "_Layout";
}
@{
    var enumData = from AccountType e in Enum.GetValues(typeof(AccountType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
@using static HaloDocMVC.Entity.Models.Constant;
@model HaloDocMVC.Entity.Models.PartnersData;
<div class="container-fluid mt-4 px-5">
    @* heading *@
    <div class="d-flex justify-content-between">
        <div class="d-flex align-self-center">
            <h4><strong>Vendor(s)</strong></h4>
        </div>
    </div>

    <div class="card rounded shadow mt-3">
        <div class="d-flex justify-content-between p-3">
            <div class="d-flex">
                <div class="search m-1">
                    <a id="searchicon">
                        <i class="fa fa-search"></i>
                    </a>
                    <input type="text" id="searchVendor" class="form-control" placeholder="Search Vendors">
                </div>
                <div class="search m-1">
                    <a id="regionicon">
                        <i class="fa fa-search"></i>
                    </a>
                    <select class="form-select" asp-for="Profession" data-allow-clear="true" tabindex="-1" id="Profession" onchange="handleSearchVendor()" asp-items="@(new SelectList(ViewBag.Profession,"HealthProfessionalId","ProfessionName"))" data-control="select2" data-placeholder="Select Level">
                        <option value="">All Professions</option>
                    </select>
                </div>
            </div>

            <div class="d-flex">
                <a class="btn btn-outline-info m-1 align-self-center" asp-action="AddBusiness" asp-controller="Partners">
                    <i class="fa fa-plus me-1"></i>Add Business
                </a>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-responsive mt-3 mb-0 dataTable">
                <thead class="theadbg">
                    <tr>
                        @{
                            var i1 = @Model.SortedColumn;
                            var J1 = @Model.IsAscending;
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "Profession" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('Profession')">
                                <small>Profession</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "Business" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('Business')">
                                <small>BusinessName</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col" class="dt-orderable-asc dt-orderable-desc @(i1 == "Email" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('Email')">
                                <small>Email</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col">Fax Number</th>
                            <th scope="col">Phone Number</th>
                            <th scope="col">Business Contact</th>
                            <th scope="col" class="text-center">Actions</th>
                        }
                    </tr>
                </thead>
                <tbody class="table-group-divider" id="vendordata">
                    @foreach (var item in Model.PD)
                    {
                        <tr>
                            <td>@item.Profession</td>
                            <td>@item.Business</td>
                            <td>@item.Email</td>
                            <td>@item.FaxNumber</td>
                            <td>@item.PhoneNumber</td>
                            <td>@item.BusinessNumber</td>
                            <td class="d-flex justify-content-center">
                                <a asp-action="EditBusiness" asp-controller="Partners" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm document-button mx-1">
                                    Edit
                                </a>
                                <form method="post" asp-action="DeleteBusiness" asp-controller="Partners" class="mt-0 deleteBusinessForm" onsubmit="displayBusyIndicator()">
                                    <input type="hidden" value="@item.Id" name="BusinessId" />
                                    <div class="btn btn-outline-info btn-sm mx-1 deleteBusiness">
                                        <span>Delete</span>
                                    </div>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!--Pagination-->
        <nav class="pagenav" aria-label="Page navigation example" id="Pagination">
            <div class="d-flex justify-content-between mx-2 mt-3">
                <div>
                    @if (Model.TotalPages == 0)
                    {
                        Model.CurrentPage = 0;
                    }
                    Page @Model.CurrentPage / @Model.TotalPages
                </div>
                <div>
                    <ul class="pagination pagination-container">
                        @{
                            int i;
                            <form id="paginationform" asp-action="Index" asp-controller="Partners" novalidate="novalidate" class="d-flex mt-0" onsubmit="displayBusyIndicator()">
                                <input type="hidden" asp-for="PageSize" />
                                <input type="hidden" asp-for="Profession" />
                                <input type="hidden" asp-for="SearchData" />
                                <input type="hidden" asp-for="SortedColumn" />
                                <input type="hidden" asp-for="IsAscending" />
                                <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                                @if (@Model.CurrentPage > 1)
                                {
                                <li class="page-item me-2">
                                    <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                </li>
                                }
                                else
                                {
                                <li class="me-2 page-item">
                                    <button class="disabled btn">&lt;</button>
                                </li>
                                }
                                @for (i = 1; i <= @Model.TotalPages; i++)
                                {
                                <li class="page-item me-2">
                                    <button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                </li>
                                }
                                @if (@Model.TotalPages > @Model.CurrentPage)
                                {
                                <li class="page-item me-2">
                                    <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                </li>
                                }
                                else
                                {
                                <li class="page-item">
                                    <button class="btn disabled">&gt;</button>
                                </li>
                                }
                            </form>
                        }
                    </ul>
                </div>
            </div>
        </nav>
        <!--End Pagination-->
    </div>
</div>
<form class="mt-0 sortingform" asp-action="Index" id="sortingform" asp-controller="Partners" novalidate="novalidate" onsubmit="displayBusyIndicator()">
    <input type="hidden" asp-for="Profession" />
    <input type="hidden" asp-for="SearchData" />
    <input type="hidden" asp-for="SortedColumn" id="sortedcol" />
    <input type="hidden" asp-for="IsAscending" id="isAsc" />
</form>
<partial name="../Shared/_Loader.cshtml" />
<script>
    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#paginationform").submit();
    }
    function SetColumValue(e) {
        var modeldata = @Html.Raw(Json.Serialize(Model));
        console.log(modeldata)
        if (modeldata.sortedColumn === e) {
            if (modeldata.isAscending == true) {
                document.getElementById('isAsc').value = false;
            }
            else {
                document.getElementById('isAsc').value = true;
            }
            console.log(document.getElementById('isAsc').value);
        }
        else {
            document.getElementById('sortedcol').value = e;
            document.getElementById('isAsc').value = true;
        }
        $("#sortingform").submit();
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('searchVendor').addEventListener('keyup', function (evt) {
            if (evt.key === 'Enter') {
                evt.preventDefault();
                handleSearchVendor();
            }
        });
    });
    function handleSearchVendor() {
        var searchValue = $('#searchVendor').val();
        var Profession = $("#Profession").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("Index", "Partners")',
            data: { searchValue: searchValue, Profession: Profession },
            success: function (data) {
                console.log("AJAX success");
                var bodyContent = $(data).find('tbody').html();
                var pagination = $(data).find('.pagenav').html();
                var sortingform = $(data).find('.sortingform').html();
                $('#vendordata').html(bodyContent);
                $('#Pagination').html(pagination);
                $('#sortingform').html(sortingform);
            },
            error: function (error) {
                console.log("Error:", error);
            }
        });
    }
</script>
<script type="text/javascript">
    var deleteButton = document.querySelectorAll('.deleteBusiness');

    deleteButton.forEach(function (button) {
        button.addEventListener('click', function (event) {
            event.preventDefault();

            var form = button.closest('.deleteBusinessForm');
            var vendorIdInput = form.querySelector('input[name="BusinessId"]');
            var vendorId = vendorIdInput.value;

            Swal.fire({
                title: "Do you want to delete this partner?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: "No"
            }).then(function (result) {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        });
    });
</script>