@model HaloDocMVC.Entity.Models.DashboardList
@using static HaloDocMVC.Entity.Models.Constant
@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "Dashboard";
}
<div id="Dashboard">
    <div class="d-flex container-fluid mt-3 position-relative ">
        <div class="">
            <h3 class="fw-bolder">
                Medical History
            </h3>
        </div>
    </div>
    <div class="card border-0 shadow py-4 mb-5 mt-3 rounded">
        <div class="text-end mx-2 px-3">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Create New
                Request
            </button>

            <!-- Modal -->
            <div class="modal fade text-start" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Create New Request</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p>Here, I want to create new request for...</p>
                            <div id="meElse">
                                <button id="me" class="btn btn-outline-info mx-2">Me</button>
                                <button id="else" class="btn btn-outline-info mx-2">Some One Else</button>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="cont" type="button" class="btn btn-info text-white">Continue</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive dNone">
            <table class="table table-responsive mt-3 p-3 dataTable">
                <thead class="theadbg">
                    <tr class="table-secondary">
                        @{
                            var i1 = @Model.SortedColumn;
                            var J1 = @Model.IsAscending;
                            <th scope="col" style="position:relative;" width="30%" class="px-3 dt-orderable-asc dt-orderable-desc @(i1 == "createdDate" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('createdDate')">
                                <small>Created Date</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col" width="40%" style="position:relative;" class="dt-orderable-asc dt-orderable-desc @(i1 == "Status" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('Status')">
                                <small>Current Status</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col">
                                <small>Document</small>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody class="table-group-divider mx-5">
                    @foreach (var item in Model.patientdata)
                    {
                        <tr>
                            <td class="px-3" scope="row"> @item.createdDate</td>
                            <td>@Enum.GetName(typeof(Status), @item.Status)</td>
                            <td>
                                @{
                                    if (item.Fcount != 0)
                                    {
                                        <a asp-action="ViewDoc" asp-controller="Dashboard" asp-route-id="@item.RequestId" class="btn btn-outline-info btn-sm document-button">
                                            Document(@item.Fcount)<i class="fa fa-arrow-circle-down px-1" aria-hidden="true"></i>
                                        </a>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="dBlock mt-3">
            <div class="accordion" id="accordionExample">
                @foreach (var item in Model.patientdata)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="flush-heading-@item.RequestId">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-@item.RequestId" aria-expanded="true" aria-controls="flush-collapseOne">
                                <i class="fa fa-clock text-info me-2"></i>
                                <b>Created Date :  </b>
                                @item.createdDate.ToString("MMM d, yyyy")
                            </button>
                        </h2>
                        <div id="flush-@item.RequestId" class="accordion-collapse collapse collapse show" aria-labelledby="flush-heading-@item.RequestId" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="mb-1">
                                    <b> Current Status : </b>
                                    @item.Status
                                </div>
                                <div>
                                    @{
                                        if (item.Fcount != 0)
                                        {
                                            <a asp-action="ViewDoc" asp-controller="Dashboard" asp-route-id="@item.RequestId" class="btn btn-outline-info btn-sm">
                                                Documents<i class="fa fa-arrow-circle-down px-1" aria-hidden="true"></i>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="d-flex justify-content-between">
    <form id="documentformPagesize" asp-action="Index" asp-controller="Dashboard" asp-route-id="" novalidate="novalidate" class="d-flex mt-0">
        <div class="search m-1 d-flex justify-content-between">
            <input type="hidden" value="@Model.UserId" asp-for="UserId" />
            <span class="pagesize">Page Size</span>
            <select class="form-select pagesizeselect" asp-for="PageSize" data-allow-clear="true" tabindex="-1" id="pagesizedropdowndocument" data-control="select2" data-placeholder="Select Level">
                <option value="5" selected>5</option>
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="50">50</option>
            </select>
        </div>
    </form>
    <nav aria-label="Page navigation example">
        <ul class="pagination pagination-container">
            @{
                int i;
                <form id="documentformpatient" asp-action="Index" asp-controller="Dashboard" asp-route-id="" novalidate="novalidate" class="d-flex mt-0">
                    <input type="hidden" value="@Model.UserId" asp-for="UserId" />
                    <input type="hidden" asp-for="CurrentPage" id="currentpagevaluedocumentpatient" />
                    <input type="hidden" asp-for="SortedColumn" />
                    <input type="hidden" asp-for="IsAscending" />
                    <input type="hidden" asp-for="PageSize" />
                    @if (@Model.CurrentPage > 1)
                    {
                    <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button></li>
                    }
                    else
                    {
                    <li class="me-2 page-item"><a class="disabled btn">&lt;</a></li>
                    }
                    @for (i = 1; i <= @Model.TotalPages; i++)
                    {
                    <li class="page-item me-2"><button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button></li>
                    }
                    @if (@Model.TotalPages > @Model.CurrentPage)
                    {
                    <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button></li>
                    }
                    else
                    {
                    <li class="me-2 page-item"><a class="btn disabled">&gt;</a></li>
                    }
                </form>
            }
        </ul>
    </nav>
</div>
<form class="sortingform" data-ajax="true" data-ajax-method="post" data-ajax-mode="replace" data-ajax-update="#SearchResult"
      asp-action="Index" asp-controller="Dashboard" novalidate="novalidate">
    <input type="hidden" asp-for="SortedColumn" id="sortedcol" />
    <input type="hidden" asp-for="IsAscending" id="isAsc" />
</form>
<script>
    function setpagenumber(e) {
        console.log(e)
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevaluedocumentpatient').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevaluedocumentpatient').val(cp);
        }
        else {
            $('#currentpagevaluedocumentpatient').val(e);
        }
        $("#documentformpatient").submit();
    }
    function SetColumValue(e) {
        var modeldata = @Html.Raw(Json.Serialize(Model));
        console.log(modeldata.sortedColumn)
        console.log(modeldata.isAscending)
        if (modeldata.sortedColumn === e) {
            if (modeldata.isAscending == true) {
                document.getElementById('isAsc').value = false;
            }
            else {
                document.getElementById('isAsc').value = true;
            }
            console.log(document.getElementById('isAsc').value);
        }
        else {
            document.getElementById('sortedcol').value = e;
            document.getElementById('isAsc').value = true;
        }
        $(".sortingform").submit();
    }
    $('#pagesizedropdowndocument').on('change', function () {
        $('#documentformPagesize').submit();
    });
</script>