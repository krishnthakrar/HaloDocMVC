@model HaloDocMVC.Entity.Models.ViewDocument;
@{
    ViewData["Title"] = "ViewDoc";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
<div class="container-fluid mb-3 tabcontent defaulttab">
    <div class="card bg-transparent border-0 p-2" style="border-radius: 15px;">
        <div class="card-header d-flex justify-content-between  border-0  bg-transparent p-1  mt-3 mb-2">
            <h5 class="mt-2"> Document</h5>
            <div class="backBtn">
                <a asp-controller="Dashboard" asp-action="Index"><button class="float-right"><span class="material-icons back"><span class="material-symbols-outlined">arrow_back_ios</span></span>Back</button></a>
            </div>
        </div>
        <div class="card-body m-1 shadow" style="border-radius: 15px;">
            <h3 class="fw-bolder">
                Patient Name :  @CredentialValue.UserName()
            </h3>
            <div class="doc-text-card mt-2">
                Here you can view all files that have been added by you or physician or anyone else.
            </div>
            <div class="col-md-12 mt-3">
                <form method="post" asp-action="UploadDoc" asp-controller="Dashboard" asp-route-id="@Model.RequestId" enctype="multipart/form-data" class="mt-0">
                    <div class="d-flex">
                        <input class="form-control doc_uploder" id="formFileSm" name="UploadFile" type="file">
                        <input type="hidden" name="Requestid" value="@Model.RequestId" />
                        <input type="submit" class="btn btn-info btn-submit text-white" value="Upload">
                    </div>
                </form>
                <div class="card-header-2 mt-3 d-flex justify-content-between border-0 bg-transparent">
                    <div class="mt-2">
                        <h6> Document</h6>
                    </div>
                    <div class="text-end">
                        <a class="btn btn-outline-info btn-back text-end" onclick="Download_all()">Download all</a>
                    </div>
                </div>
                <div class="table-responsive mt-3 mb-0">
                    <table class="table mb-0 dataTable">
                        <thead class="border-0">
                            <tr class="table-secondary">
                                @{
                                    var i1 = @Model.SortedColumn;
                                    var J1 = @Model.IsAscending;
                                    <th scope="col" class="table-text-header px-3">
                                        <div class="form-check">
                                            <input class="form-check-input " type="checkbox" id="selectall" onchange="select_Deselectall()">
                                        </div>
                                    </th>
                                    <th scope="col" style="position:relative;" class="dt-orderable-asc dt-orderable-desc @(i1 == "FileName" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('FileName')">
                                        <small>Document Name</small>
                                        <span class="dt-column-order"></span>
                                    </th>
                                    <th scope="col">
                                        <small>Uploader</small>
                                    </th>
                                    <th scope="col" style="position:relative;" class="dt-orderable-asc dt-orderable-desc @(i1 == "CreatedDate" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('CreatedDate')">
                                        <small>Upload Date</small>
                                        <span class="dt-column-order"></span>
                                    </th>
                                    <th scope="col">
                                        <small>Action</small>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item2 in Model.Files)
                            {
                                <tr>
                                    <td class="table-text px-3">
                                        <div class="form-check">
                                            <input class="form-check-input doc-checkbox" type="checkbox" value="" onclick="statusselectall()">
                                        </div>
                                    </td>
                                    <td class="table-text px-3">@item2.FileName</td>
                                    <td class="table-text px-3">@item2.RFirstName</td>
                                    <td class="table-text px-3">@item2.CreatedDate</td>
                                    <td class="table-text ">
                                        <a class="btn btn-sm download-link  btn-outline-info document-button" download href="/Upload/@item2.FileName">
                                            <i class="fa fa-cloud-download"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="m-2 d-flex justify-content-between">
                    <form id="documentformPagesize" asp-action="ViewDoc" asp-controller="Dashboard" asp-route-id="@Model.RequestId" novalidate="novalidate" class="d-flex mt-0">
                        <div class="search m-1 d-flex justify-content-between">
                            <input type="hidden" value="@Model.RequestId" asp-for="RequestId" />
                            <span class="pagesize">Page Size</span>
                            <select class="form-select pagesizeselect" asp-for="PageSize" data-allow-clear="true" tabindex="-1" id="pagesizedropdowndocument" data-control="select2" data-placeholder="Select Level">
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                            </select>
                        </div>
                    </form>
                    <nav aria-label="Page navigation example">
                        <ul class="pagination pagination-container">
                            @{
                                int i;
                                <form id="documentform" asp-action="ViewDoc" asp-controller="Dashboard" asp-route-id="@Model.RequestId" novalidate="novalidate" class="d-flex mt-0">
                                    <input type="hidden" value="@Model.RequestId" asp-for="RequestId" />
                                    <input type="hidden" asp-for="CurrentPage" id="currentpagevaluedocument" />
                                    <input type="hidden" asp-for="SortedColumn" />
                                    <input type="hidden" asp-for="IsAscending" />
                                    <input type="hidden" asp-for="PageSize" />
                                    @if (@Model.CurrentPage > 1)
                                    {
                                    <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button></li>
                                    }
                                    else
                                    {
                                    <li class="me-2 page-item"><a class="disabled btn">&lt;</a></li>
                                    }
                                    @for (i = 1; i <= @Model.TotalPages; i++)
                                    {
                                    <li class="page-item me-2"><button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button></li>
                                    }
                                    @if (@Model.TotalPages > @Model.CurrentPage)
                                    {
                                    <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button></li>
                                    }
                                    else
                                    {
                                    <li class="me-2 page-item"><a class="btn disabled">&gt;</a></li>
                                    }
                                </form>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
<form class="sortingform"
      asp-action="ViewDoc" asp-controller="Dashboard" novalidate="novalidate">
    <input type="hidden" asp-for="SortedColumn" id="sortedcol" />
    <input type="hidden" asp-for="IsAscending" id="isAsc" />
    <input type="hidden" asp-for="PageSize" id="isAsc" />
</form>
<script>
    function setpagenumber(e) {
        console.log(e)
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevaluedocument').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevaluedocument').val(cp);
        }
        else {
            $('#currentpagevaluedocument').val(e);
        }
        $("#documentform").submit();
    }
    function SetColumValue(e) {
        var modeldata = @Html.Raw(Json.Serialize(Model));
        console.log(modeldata)
        if (modeldata.sortedColumn === e) {
            if (modeldata.isAscending == true) {
                document.getElementById('isAsc').value = false;
            }
            else {
                document.getElementById('isAsc').value = true;
            }
            console.log(document.getElementById('isAsc').value);
        }
        else {
            document.getElementById('sortedcol').value = e;
            document.getElementById('isAsc').value = true;
        }
        $(".sortingform").submit();
    }
    $('#pagesizedropdowndocument').on('change', function () {
        $('#documentformPagesize').submit();
    });
</script>
<script>
    function statusselectall() {
        var selectAllCheckbox = document.getElementById('selectall');
        var allCheckboxes = document.getElementsByClassName('doc-checkbox');
        var temp = false;
        var i = 0;
        for (i = 0; i < allCheckboxes.length; i++) {
            if (!allCheckboxes[i].checked) {
                temp = true;
                selectAllCheckbox.checked = false;
                break;
            }
        }
        if (i == allCheckboxes.length) {
            selectAllCheckbox.checked = true;
        }
    }
    function select_Deselectall() {
        var selectAllCheckbox = document.getElementById('selectall');
        var allCheckboxes = document.getElementsByClassName('doc-checkbox');

        for (var i = 0; i < allCheckboxes.length; i++) {
            allCheckboxes[i].checked = selectAllCheckbox.checked;
        }
    }

    function Download_all() {
        var allcheckbox = document.getElementsByClassName('doc-checkbox');
        var alllinks = document.getElementsByClassName('download-link');
        console.log(alllinks.length);
        console.log(allcheckbox.length);
        for (var i = 0; i < allcheckbox.length; i++) { // Use < instead of <=
            if (allcheckbox[i].checked) {
                console.log(alllinks[i]);
                alllinks[i].click();
            }
        }
    }
</script>
