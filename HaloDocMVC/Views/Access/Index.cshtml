@model HaloDocMVC.Entity.Models.AccessMenu;
﻿@using static HaloDocMVC.Entity.Models.Constant;
@{
    Layout = "_Layout";
    ViewData["Title"] = "Access";
}
<div class="body">
    <div class="container">
        <div class="d-flex justify-content-between mt-3">
            <div class="d-flex align-items-center">
                <h4 class="pt-2">Account Access</h4>
            </div>
        </div>
        <div class="card border-0 shadow py-4 mb-5 mt-3 rounded p-3 rounded container">
            <div class="d-flex justify-content-end">
                <a asp-controller="Access" asp-action="CreateAccess" class="btn btn-outline-info rounded mb-1 align-self-center">
                    <span>
                        <b>Create Access</b>
                    </span>
                </a>
            </div>
            <table class="w-100 mt-3 table dataTable">
                <thead class="theadbg py-2">
                    <tr>
                        @{
                            var i1 = @Model.SortedColumn;
                            var J1 = @Model.IsAscending;
                            <th scope="col" style="width:40%" class="dt-orderable-asc dt-orderable-desc @(i1 == "RoleName" ? (J1 == true ?"dt-ordering-asc" : "dt-ordering-desc" ) : "")" onclick="SetColumValue('RoleName')">
                                <small>Name</small>
                                <span class="dt-column-order"></span>
                            </th>
                            <th scope="col" style="width:45%">
                                <small>Account Type</small>
                            </th>
                            <th scope="col" style="width:15%">
                                <small>Actions</small>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody class="mb-5" id="tableBody">
                    @foreach (var item in Model.AM)
                    {
                        <tr>
                            <td>
                                @item.RoleName
                            </td>
                            <td>
                                @Enum.GetName(typeof(AccountType), item.AccountType)
                            </td>
                            <td>
                                <a class="btn btn-outline-info" asp-action="EditAccess" asp-controller="Access" asp-route-id="@item.RoleId" asp-route-AccountType="@item.AccountType">
                                    <small>Edit</small>
                                </a>
                                <a class="btn btn-outline-info" asp-action="DeleteAccess" asp-controller="Access" asp-route-id="@item.RoleId">
                                    <small>Delete</small>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!--Pagination-->
            <nav class="pagenav" aria-label="Page navigation example" id="Pagination">
                <div class="d-flex justify-content-between mx-2 mt-3">
                    <div>
                        @if (Model.TotalPages == 0)
                        {
                            Model.CurrentPage = 0;
                        }
                        Page @Model.CurrentPage / @Model.TotalPages
                    </div>
                    <div>
                        <ul class="pagination pagination-container">
                            @{
                                int i;
                                <form id="paginationform" asp-action="Index" asp-controller="Access" novalidate="novalidate" class="d-flex mt-0">
                                    <input type="hidden" asp-for="PageSize" />
                                    <input type="hidden" asp-for="SortedColumn" />
                                    <input type="hidden" asp-for="IsAscending" />
                                    <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                                    @if (@Model.CurrentPage > 1)
                                    {
                                    <li class="page-item me-2">
                                        <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                    </li>
                                    }
                                    else
                                    {
                                    <li class="me-2 page-item">
                                        <button class="disabled btn">&lt;</button>
                                    </li>
                                    }
                                    @for (i = 1; i <= @Model.TotalPages; i++)
                                    {
                                    <li class="page-item me-2">
                                        <button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                    </li>
                                    }
                                    @if (@Model.TotalPages > @Model.CurrentPage)
                                    {
                                    <li class="page-item me-2">
                                        <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                    </li>
                                    }
                                    else
                                    {
                                    <li class="page-item">
                                        <button class="btn disabled">&gt;</button>
                                    </li>
                                    }
                                </form>
                            }
                        </ul>
                    </div>
                </div>
            </nav>
            <!--End Pagination-->
        </div>
    </div>
</div>
<form class="mt-0 sortingform" asp-action="Index" asp-controller="Access" novalidate="novalidate">
    <input type="hidden" asp-for="SortedColumn" id="sortedcol" />
    <input type="hidden" asp-for="IsAscending" id="isAsc" />
</form>
<script type="text/javascript">
    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#paginationform").submit();
    }
    function SetColumValue(e) {
        var modeldata = @Html.Raw(Json.Serialize(Model));
        console.log(modeldata)
        if (modeldata.sortedColumn === e) {
            if (modeldata.isAscending == true) {
                document.getElementById('isAsc').value = false;
            }
            else {
                document.getElementById('isAsc').value = true;
            }
            console.log(document.getElementById('isAsc').value);
        }
        else {
            document.getElementById('sortedcol').value = e;
            document.getElementById('isAsc').value = true;
        }
        $(".sortingform").submit();
    }
</script>