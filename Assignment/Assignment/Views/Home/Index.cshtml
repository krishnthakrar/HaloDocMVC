@model Assignment.Entity.Models.PaginatedViewModel;
@{
    ViewData["Title"] = "Home Page";
}
<div class="bodycontent" id="bodycontent">
    <div class="d-flex justify-content-end align-items-center p-3 subnav">
        <button class="btn bg-white fw-bold" data-bs-toggle="modal" data-bs-target="#addUser">Add User</button>
    </div>
    <div class="mx-5">
        <div class="row my-4">
            <form id="searchForm" asp-action="Index" asp-controller="Home">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 form-floating">
                    <input asp-for="SearchInput" type="text" class="form-control shadow-none" id="searchBar" placeholder="Search" onblur="searchValue()">
                    <label for="searchBar" class="form-label">Search</label>
                </div>
            </form>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">User ID</th>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Age</th>
                    <th scope="col">Phone Number</th>
                    <th scope="col">Gender</th>
                    <th scope="col">City</th>
                    <th scope="col">Country</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.UserData)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.Email</td>
                        <td>@item.Age</td>
                        <td>@item.PhoneNo</td>
                        <td>@item.Gender</td>
                        <td>@item.City</td>
                        <td>@item.Country</td>
                        <td>
                            <button class="btn text-white editBtn" data-bs-toggle="modal" data-bs-target="#editUser" onclick="getData(@item.Id)">Edit</button>
                            <a asp-action="DeleteUser" asp-controller="Home" asp-route-id="@item.Id" class="btn text-white bg-black">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="m-2 d-flex justify-content-end">
        <nav>
            <ul class="pagination pagination-container">
                @{
                    int i;
                    <form id="paginationform" data-ajax="true" data-ajax-mode="replace" data-ajax-update="#bodycontent"
                          asp-action="Index" asp-controller="Home" novalidate="novalidate" class="mt-0 d-flex">
                        <input type="hidden" asp-for="SearchInput" />
                        <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                        <div class="mx-2 d-flex">
                            <span class="pagesize mt-1 me-3">Pagesize</span>
                            <select class="form-select pagesizeselect" asp-for="PageSize" data-allow-clear="true" tabindex="-1" id="pagesizedropdown" data-control="select2" data-placeholder="Page Size">
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                            </select>
                        </div>
                        @if (@Model.CurrentPage > 1)
                        {
                        <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button></li>
                        }
                        else
                        {
                        <li class="me-2 page-item"><a class="disabled btn">&lt;</a></li>
                        }
                        @for (i = 1; i <= @Model.TotalPages; i++)
                        {
                        <li class="page-item me-2"><button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button></li>
                        }
                        @if (@Model.TotalPages > @Model.CurrentPage)
                        {
                        <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button></li>
                        }
                        else
                        {
                        <li class="me-2 page-item"><a class="btn disabled">&gt;</a></li>
                        }
                    </form>
                }
            </ul>
        </nav>
    </div>
</div>
@Html.Partial("~/Views/Home/AddUser.cshtml", new Assignment.Entity.Models.AddUserModel())
@Html.Partial("~/Views/Home/EditUser.cshtml", new Assignment.Entity.Models.AddUserModel())
<script type="text/javascript">
    function searchValue(){
        $('#searchForm').submit();
    }

    function getData(id) {
        $.ajax({
            type: 'GET',
            url: '/Home/GetData',
            data: { id: id },
            cache: false,
            success: function (result) {
                document.getElementById("editFirstName").value = result.firstName;
                document.getElementById("editLastName").value = result.lastName;
                document.getElementById("editEmail").value = result.email;
                document.getElementById("editPhoneNo").value = result.phoneNo;
                document.getElementById("editCountry").value = result.country;
                document.getElementById("editCity").value = result.cityId;
                document.getElementById("editUserId").value = result.id;
                if(result.gender == "Male") {
                    $("input[name=GenderRadio][value='1']").prop("checked", true);
                }
                else if(result.gender == "Female") {
                    $("input[name=GenderRadio][value='2']").prop("checked", true);
                }
                else {
                    $("input[name=GenderRadio][value='3']").prop("checked", true);
                }
            }
        });
    }

    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#paginationform").submit();
    }

    $(function () {
        $('#pagesizedropdown').on('change', function () {
            $('#paginationform').submit();
        });
    });
</script>